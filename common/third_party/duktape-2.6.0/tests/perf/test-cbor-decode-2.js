if (typeof print !== 'function') { print = console.log; }

function test() {
    // Encoded data from test-cbor-encode-2.js.
    var u8 = new Uint8Array([
        0xa3, 0x67, 0x6a, 0x73, 0x6f, 0x6e, 0x72, 0x70,
        0x63, 0x63, 0x32, 0x2e, 0x30, 0x66, 0x6d, 0x65,
        0x74, 0x68, 0x6f, 0x64, 0x66, 0x46, 0x6f, 0x6f,
        0x42, 0x61, 0x72, 0x66, 0x70, 0x61, 0x72, 0x61,
        0x6d, 0x73, 0xab, 0x64, 0x61, 0x72, 0x67, 0x31,
        0x6a, 0x78, 0x78, 0x78, 0x78, 0x78, 0x79, 0x79,
        0x79, 0x79, 0x79, 0x64, 0x61, 0x72, 0x67, 0x32,
        0x74, 0x78, 0x78, 0x78, 0x78, 0x78, 0x79, 0x79,
        0x79, 0x79, 0x79, 0x7a, 0x7a, 0x7a, 0x7a, 0x7a,
        0x77, 0x77, 0x77, 0x77, 0x77, 0x64, 0x61, 0x72,
        0x67, 0x33, 0x6a, 0x78, 0x78, 0x78, 0x78, 0x78,
        0x79, 0x79, 0x79, 0x79, 0x79, 0x64, 0x61, 0x72,
        0x67, 0x34, 0x74, 0x78, 0x78, 0x78, 0x78, 0x78,
        0x79, 0x79, 0x79, 0x79, 0x79, 0x7a, 0x7a, 0x7a,
        0x7a, 0x7a, 0x77, 0x77, 0x77, 0x77, 0x77, 0x64,
        0x61, 0x72, 0x67, 0x35, 0x6a, 0x78, 0x78, 0x78,
        0x78, 0x78, 0x79, 0x79, 0x79, 0x79, 0x79, 0x64,
        0x61, 0x72, 0x67, 0x36, 0x74, 0x78, 0x78, 0x78,
        0x78, 0x78, 0x79, 0x79, 0x79, 0x79, 0x79, 0x7a,
        0x7a, 0x7a, 0x7a, 0x7a, 0x77, 0x77, 0x77, 0x77,
        0x77, 0x64, 0x61, 0x72, 0x67, 0x37, 0x6a, 0x78,
        0x78, 0x78, 0x78, 0x78, 0x79, 0x79, 0x79, 0x79,
        0x79, 0x64, 0x61, 0x72, 0x67, 0x38, 0x74, 0x78,
        0x78, 0x78, 0x78, 0x78, 0x79, 0x79, 0x79, 0x79,
        0x79, 0x7a, 0x7a, 0x7a, 0x7a, 0x7a, 0x77, 0x77,
        0x77, 0x77, 0x77, 0x64, 0x61, 0x72, 0x67, 0x39,
        0x6a, 0x78, 0x78, 0x78, 0x78, 0x78, 0x79, 0x79,
        0x79, 0x79, 0x79, 0x65, 0x61, 0x72, 0x67, 0x31,
        0x30, 0x74, 0x78, 0x78, 0x78, 0x78, 0x78, 0x79,
        0x79, 0x79, 0x79, 0x79, 0x7a, 0x7a, 0x7a, 0x7a,
        0x7a, 0x77, 0x77, 0x77, 0x77, 0x77, 0x65, 0x61,
        0x72, 0x67, 0x31, 0x31, 0x8b, 0x01, 0xfb, 0x3f,
        0xf1, 0x99, 0x99, 0x99, 0x99, 0x99, 0x9a, 0xfb,
        0x3f, 0xf3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
        0xfb, 0x3f, 0xf4, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc,
        0xcd, 0xfb, 0x3f, 0xf6, 0x66, 0x66, 0x66, 0x66,
        0x66, 0x66, 0xf9, 0x3e, 0x00, 0xfb, 0x3f, 0xf9,
        0x99, 0x99, 0x99, 0x99, 0x99, 0x9a, 0xfb, 0x3f,
        0xfb, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xfb,
        0x3f, 0xfc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcd,
        0xfb, 0x3f, 0xfe, 0x66, 0x66, 0x66, 0x66, 0x66,
        0x66, 0x02 ]);
    var buf = u8.buffer;

    for (var i = 0; i < 1e5; i++) {
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
        void CBOR.decode(buf);
    }
}

try {
    test();
} catch (e) {
    print(e.stack || e);
    throw e;
}
