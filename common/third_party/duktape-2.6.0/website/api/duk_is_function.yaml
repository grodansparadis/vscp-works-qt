name: duk_is_function

proto: |
  duk_bool_t duk_is_function(duk_context *ctx, duk_idx_t idx);

stack: |
  [ ... val! ... ]

summary: |
  <p>Returns 1 if value at <code>idx</code> is an object and is a function (has the
  internal class <code>Function</code>), otherwise returns 0.  If <code>idx</code> is
  invalid, also returns 0.</p>

  <p>This function returns 1 when the following ECMAScript expression is true:</p>
  <pre class="ecmascript-code">
  Object.prototype.toString.call(val) === '[object Function]'
  </pre>

  <p>To determine the specific type of the function, use:</p>
  <ul>
  <li><code><a href="#duk_is_c_function">duk_is_c_function()</a></code></li>
  <li><code><a href="#duk_is_ecmascript_function">duk_is_ecmascript_function()</a></code></li>
  <li><code><a href="#duk_is_bound_function">duk_is_bound_function()</a></code></li>
  </ul>

example: |
  if (duk_is_function(ctx, -3)) {
      /* ... */
  }

tags:
  - stack
  - function

introduced: 1.0.0
