name: duk_get_prop_heapptr

proto: |
  duk_bool_t duk_get_prop_heapptr(duk_context *ctx, duk_idx_t obj_idx, void *ptr);

stack: |
  [ ... obj! ... ] -> [ ... obj! ... val! ]  (if key exists)
  [ ... obj! ... ] -> [ ... obj! ... undefined! ]  (if key doesn't exist)

summary: |
  <p>Like <code><a href="#duk_get_prop">duk_get_prop()</a></code>, but the
  property name is given as a Duktape heap pointer obtained e.g. using
  <code><a href="#duk_get_heapptr">duk_get_heapptr()</a></code>.  If
  <code>ptr</code> is NULL, <code>undefined</code> is used as the key.</p>

example: |
  void *ptr;

  duk_push_string(ctx, "propertyName");
  ptr = duk_get_heapptr(ctx, -1);
  /* String behind 'ptr' must remain reachable! */

  (void) duk_get_prop_heapptr(ctx, -3, ptr);
  printf("obj.propertyName = %s\n", duk_to_string(ctx, -1));
  duk_pop(ctx);

tags:
  - property
  - borrowed
  - heapptr

seealso:
  - duk_get_prop
  - duk_get_prop_index
  - duk_get_prop_string
  - duk_get_prop_lstring
  - duk_get_prop_literal

introduced: 2.2.0
